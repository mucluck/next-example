FROM oven/bun:alpine

ENV BASE_DIR=/usr/app

ENV NEXT_PUBLIC_CANONICAL=${NEXT_PUBLIC_CANONICAL}
ENV NEXT_PUBLIC_CYRILLIC=${NEXT_PUBLIC_CYRILLIC}
ENV NEXT_PUBLIC_HASURA_API_URL=${NEXT_PUBLIC_HASURA_API_URL}
ENV NEXT_PUBLIC_HASURA_BASE_URL=${NEXT_PUBLIC_HASURA_BASE_URL}
ENV NEXT_PUBLIC_HASURA_GUEST_TOKEN=${NEXT_PUBLIC_HASURA_GUEST_TOKEN}
ENV NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN=${NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN}
ENV NEXT_PUBLIC_SENTRY_AUTH_TOKEN=${NEXT_PUBLIC_SENTRY_AUTH_TOKEN}
ENV NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
ENV NEXT_PUBLIC_OUTPUT=${NEXT_PUBLIC_OUTPUT}
ENV NEXT_PUBLIC_OUT=out

WORKDIR ${BASE_DIR}/

COPY build.sh ${BASE_DIR}/
COPY package.json bun.lockb next.config.js tsconfig.json ${BASE_DIR}/
COPY public/ ${BASE_DIR}/public/
COPY packages/ ${BASE_DIR}/packages/
COPY src/ ${BASE_DIR}/src/

# Remove after debug
# RUN ls -alR
# RUN ls -alR >ls-alR.txt
RUN wget --no-verbose -O /usr/local/bin/mc https://dl.min.io/client/mc/release/linux-amd64/mc && chmod a+x /usr/local/bin/mc

RUN bun install

CMD ${BASE_DIR}/build.sh
